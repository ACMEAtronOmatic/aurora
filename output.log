nohup: ignoring input
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
/home/jgib124/aurora/aurora/a_env/lib/python3.12/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:654: Checkpoint directory /home/jgib124/aurora/aurora/gfs_converter_ckpt exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Processed GFS Data for this time range found
ERA5 Data for this time range found
Memory Available before DataLoader: 51.01 GB
Memory after Preparing Data: 51.01 GB
GFS Size:  85
Memory after Data Setup: 51.01 GB
Memory Available after DataLoader: 51.01 GB
Input Channels:  85 Output Channels:  69
Input Shape:  torch.Size([85, 721, 1440]) Output Shape:  torch.Size([69, 721, 1440])
Memory before Lightning Module: 51.01 GB
====================================================================================================
Layer (type:depth-idx)                             Output Shape              Param #
====================================================================================================
GFSUnbiaser                                        [1, 69, 721, 1440]        --
├─Encoder: 1-1                                     [1, 256, 180, 360]        --
│    └─ModuleList: 2-3                             --                        (recursive)
│    │    └─Conv2DBlock: 3-1                       [1, 128, 721, 1440]       265,891,584
│    └─MaxPool2d: 2-2                              [1, 128, 360, 720]        --
│    └─ModuleList: 2-3                             --                        (recursive)
│    │    └─Conv2DBlock: 3-2                       [1, 256, 360, 720]        133,021,952
│    └─MaxPool2d: 2-4                              [1, 256, 180, 360]        --
├─Decoder: 1-2                                     [1, 128, 721, 1440]       --
│    └─ModuleList: 2-7                             --                        (recursive)
│    │    └─ConvTranspose2d: 3-3                   [1, 256, 360, 720]        262,400
│    └─ModuleList: 2-8                             --                        (recursive)
│    │    └─Conv2DBlock: 3-4                       [1, 128, 360, 720]        66,654,336
│    └─ModuleList: 2-7                             --                        (recursive)
│    │    └─ConvTranspose2d: 3-5                   [1, 128, 720, 1440]       65,664
│    └─ModuleList: 2-8                             --                        (recursive)
│    │    └─Conv2DBlock: 3-6                       [1, 128, 721, 1440]       265,941,120
├─Conv2d: 1-3                                      [1, 69, 721, 1440]        8,901
====================================================================================================
Total params: 731,845,957
Trainable params: 731,845,957
Non-trainable params: 0
Total mult-adds (Units.GIGABYTES): 554.07
====================================================================================================
Input size (MB): 353.00
Forward/backward pass size (MB): 8010.79
Params size (MB): 2927.38
Estimated Total Size (MB): 11291.18
====================================================================================================
Memory after Lightning Module: 48.07 GB
Starting Training...
Memory after Preparing Data: 48.07 GB
GFS Size:  85
Memory after Data Setup: 48.07 GB
┏━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃   ┃ Name     ┃ Type        ┃ Params ┃ Mode  ┃
┡━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ 0 │ model    │ GFSUnbiaser │  731 M │ train │
│ 1 │ loss_fxn │ Loss        │      0 │ train │
└───┴──────────┴─────────────┴────────┴───────┘
Trainable params: 731 M                                                         
Non-trainable params: 0                                                         
Total params: 731 M                                                             
Total estimated model params size (MB): 2.9 K                                   
Modules in train mode: 60                                                       
Modules in eval mode: 0                                                         
Epoch 0/49 ━━━━━━━━━━━━━━━━ 108/108 0:12:34 • 0:00:00 0.17it/s v_num: 3.000     
                                                               train_ssim_loss: 
                                                               0.079            
                                                               train_mse_loss:  
                                                               0.150            
                                                               train_mae_loss:  
                                                               0.164            
                                                               train_composite_…
                                                               0.150            
                                                               val_ssim_loss:   
                                                               0.079            
                                                               val_mse_loss:    
                                                               0.152            
                                                               val_mae_loss:    
                                                               0.166            
                                                               val_composite_lo…
                                                               0.152            
Epoch 1/49 ━━━━━━━━━━━━━━━━ 108/108 0:12:31 • 0:00:00 0.17it/s v_num: 3.000     
                                                               train_ssim_loss: 
                                                               0.079            
                                                               train_mse_loss:  
                                                               0.150            
                                                               train_mae_loss:  
                                                               0.164            
                                                               train_composite_…
                                                               0.150            
                                                               val_ssim_loss:   
                                                               0.079            
                                                               val_mse_loss:    
                                                               0.152            
                                                               val_mae_loss:    
                                                               0.166            
                                                               val_composite_lo…
                                                               0.152            
Epoch 2/49 ━━━━━━━━━━━━━━━━ 108/108 0:12:30 • 0:00:00 0.17it/s v_num: 3.000     
                                                               train_ssim_loss: 
                                                               0.080            
                                                               train_mse_loss:  
                                                               0.152            
                                                               train_mae_loss:  
                                                               0.165            
                                                               train_composite_…
                                                               0.152            
                                                               val_ssim_loss:   
                                                               0.079            
                                                               val_mse_loss:    
                                                               0.152            
                                                               val_mae_loss:    
                                                               0.166            
                                                               val_composite_lo…
                                                               0.152            
Epoch 3/49 ━━━━━━━━━━━━━━━━ 108/108 0:12:33 • 0:00:00 0.17it/s v_num: 3.000     
                                                               train_ssim_loss: 
                                                               0.079            
                                                               train_mse_loss:  
                                                               0.145            
                                                               train_mae_loss:  
                                                               0.159            
                                                               train_composite_…
                                                               0.145            
                                                               val_ssim_loss:   
                                                               0.079            
                                                               val_mse_loss:    
                                                               0.152            
                                                               val_mae_loss:    
                                                               0.166            
                                                               val_composite_lo…
                                                               0.152            
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:496: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`). Consider using `matplotlib.pyplot.close()`.
  fig = plt.figure(figsize=(12, 6))
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
Batch 0
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6259002685546875
	Input Std: 0.09325854480266571
	Pred Mean: -0.1778413951396942
	Pred Std: 0.01612989604473114
	Truth Mean: 0.004416915588080883
	Truth Std: 0.011744730174541473
Tensor Range:  0.313989 0.81730473
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5977357029914856
	Input Std: 0.07555827498435974
	Pred Mean: -0.24449999630451202
	Pred Std: 0.0266859270632267
	Truth Mean: 0.002157087903469801
	Truth Std: 0.007610721047967672
Tensor Range:  0.3865538 0.7700801
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.48789894580841064
	Input Std: 0.06635890901088715
	Pred Mean: 0.4307694137096405
	Pred Std: 0.03574668616056442
	Truth Mean: -0.00035953163751401007
	Truth Std: 0.0031371249351650476
Tensor Range:  0.3204058 0.6090901
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2837815284729004
	Input Std: 0.05982976779341698
	Pred Mean: 0.11241433024406433
	Pred Std: 0.021179556846618652
	Truth Mean: -0.00033330937731079757
	Truth Std: 0.004319260828197002
Tensor Range:  0.15868032 0.4198382
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49952423572540283
	Input Std: 0.028818858787417412
	Pred Mean: 0.00042248182580806315
	Pred Std: 0.006077505182474852
	Truth Mean: -7.570490561192855e-05
	Truth Std: 0.006245669908821583
Tensor Range:  0.3590586 0.6233768
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5054841637611389
	Input Std: 0.03888726606965065
	Pred Mean: -0.00019302334112580866
	Pred Std: 0.00541988480836153
	Truth Mean: 0.00013586814748123288
	Truth Std: 0.008043081499636173
Tensor Range:  0.28488985 0.67998075
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5285569429397583
	Input Std: 0.0587453730404377
	Pred Mean: -2.3993439754121937e-05
	Pred Std: 0.006096169352531433
	Truth Mean: 0.00039588878280483186
	Truth Std: 0.00959007441997528
Tensor Range:  0.27862313 0.79453224
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5246295928955078
	Input Std: 0.05916578695178032
	Pred Mean: -0.0005659980815835297
	Pred Std: 0.01405145414173603
	Truth Mean: 0.0005290226545184851
	Truth Std: 0.010274655185639858
Tensor Range:  0.28418407 0.76918405
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4988460838794708
	Input Std: 0.028238758444786072
	Pred Mean: -5.784323366242461e-05
	Pred Std: 0.007383256684988737
	Truth Mean: 0.00030377745861187577
	Truth Std: 0.006868070922791958
Tensor Range:  0.32721108 0.64921105
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49932295083999634
	Input Std: 0.034379538148641586
	Pred Mean: 0.0004887377144768834
	Pred Std: 0.0057271444238722324
	Truth Mean: 0.00022838414588477463
	Truth Std: 0.008593526668846607
Tensor Range:  0.2615177 0.69841766
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5001325607299805
	Input Std: 0.0522165447473526
	Pred Mean: 0.00021381827536970377
	Pred Std: 0.006680367048829794
	Truth Mean: 3.0054237868171185e-05
	Truth Std: 0.010125690139830112
Tensor Range:  0.24512331 0.74962324
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5008466243743896
	Input Std: 0.0631055161356926
	Pred Mean: 0.00014173626550473273
	Pred Std: 0.0062749627977609634
	Truth Mean: -0.00046083726920187473
	Truth Std: 0.01112912967801094
Tensor Range:  0.19367245 0.7981725
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16708336770534515
	Input Std: 0.14062732458114624
	Pred Mean: 0.40148311853408813
	Pred Std: 0.03341427817940712
	Truth Mean: -0.003109079785645008
	Truth Std: 0.02877615951001644
Tensor Range:  0.00039121733 0.75183123
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1106952652335167
	Input Std: 0.10000709444284439
	Pred Mean: 0.2078823745250702
	Pred Std: 0.01668458804488182
	Truth Mean: -0.003203656757250428
	Truth Std: 0.02386603318154812
Tensor Range:  8.872769e-06 0.5228249
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.02103215456008911
	Input Std: 0.02860075607895851
	Pred Mean: -0.16568045318126678
	Pred Std: 0.02524496242403984
	Truth Mean: -0.0007199755636975169
	Truth Std: 0.007879389449954033
Tensor Range:  2.4999931e-08 0.17599042
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.778612153837457e-05
	Input Std: 9.694664186099544e-06
	Pred Mean: -0.2553686499595642
	Pred Std: 0.029279829934239388
	Truth Mean: 3.5771194234257564e-05
	Truth Std: 7.510175237257499e-06
Tensor Range:  2.4999995e-08 8.71338e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06347069889307022
	Input Std: 0.001412329962477088
	Pred Mean: 0.06721893697977066
	Pred Std: 0.015967387706041336
	Truth Mean: -6.359990948112682e-05
	Truth Std: 0.00029193045338615775
Tensor Range:  0.057194997 0.06833358
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07961452007293701
	Input Std: 0.0017763760406523943
	Pred Mean: 0.3526400625705719
	Pred Std: 0.028015537187457085
	Truth Mean: -1.4979026673245244e-05
	Truth Std: 0.0001876706228358671
Tensor Range:  0.07309029 0.08326764
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12990684807300568
	Input Std: 0.003980512265115976
	Pred Mean: 0.25504669547080994
	Pred Std: 0.02535286173224449
	Truth Mean: 3.4012526157312095e-05
	Truth Std: 6.73677641316317e-05
Tensor Range:  0.12121522 0.13493079
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Input Mean: 0.31208136677742004
	Input Std: 0.005119992885738611
	Pred Mean: 0.04608846828341484
	Pred Std: 0.01055141631513834
	Truth Mean: 3.889287108904682e-05
	Truth Std: 9.871384827420115e-05
Tensor Range:  0.29582942 0.31769726
Batch 1
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6244673728942871
	Input Std: 0.09509593993425369
	Pred Mean: -0.17786961793899536
	Pred Std: 0.0160736795514822
	Truth Mean: 0.004805772565305233
	Truth Std: 0.012019866146147251
Tensor Range:  0.32019317 0.82745636
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5961111187934875
	Input Std: 0.07778330892324448
	Pred Mean: -0.24450314044952393
	Pred Std: 0.026708116754889488
	Truth Mean: 0.0023019048385322094
	Truth Std: 0.007495851721614599
Tensor Range:  0.3806104 0.7800314
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4871824383735657
	Input Std: 0.06767033040523529
	Pred Mean: 0.43074914813041687
	Pred Std: 0.035885777324438095
	Truth Mean: -0.000512783182784915
	Truth Std: 0.003053296823054552
Tensor Range:  0.3395372 0.60332674
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2856346070766449
	Input Std: 0.060822829604148865
	Pred Mean: 0.11244721710681915
	Pred Std: 0.021093931049108505
	Truth Mean: -0.00027152037364430726
	Truth Std: 0.00437875185161829
Tensor Range:  0.14486244 0.42202035
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49903181195259094
	Input Std: 0.028936708346009254
	Pred Mean: 0.0004257123509887606
	Pred Std: 0.006076460238546133
	Truth Mean: -0.0003599865303840488
	Truth Std: 0.0061249746941030025
Tensor Range:  0.38827333 0.603637
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5052050948143005
	Input Std: 0.03863415867090225
	Pred Mean: -0.00019531436555553228
	Pred Std: 0.005504160188138485
	Truth Mean: 6.470383959822357e-05
	Truth Std: 0.00765835540369153
Tensor Range:  0.32466912 0.6941237
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5296981930732727
	Input Std: 0.05921957641839981
	Pred Mean: -1.0100269719259813e-05
	Pred Std: 0.006054779049009085
	Truth Mean: 0.0003129452234134078
	Truth Std: 0.009393527172505856
Tensor Range:  0.3320296 0.82021147
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5225623250007629
	Input Std: 0.0598827563226223
	Pred Mean: -0.0005562365986406803
	Pred Std: 0.013991452753543854
	Truth Mean: 0.0003036542912013829
	Truth Std: 0.010750497691333294
Tensor Range:  0.2573212 0.7773212
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49844732880592346
	Input Std: 0.02706247568130493
	Pred Mean: -2.3561458874610253e-05
	Pred Std: 0.007354206871241331
	Truth Mean: 0.0002925933513324708
	Truth Std: 0.006898239720612764
Tensor Range:  0.3568938 0.6323938
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49920326471328735
	Input Std: 0.03216584399342537
	Pred Mean: 0.0005087043973617256
	Pred Std: 0.005801594816148281
	Truth Mean: 0.00028743856819346547
	Truth Std: 0.008510354906320572
Tensor Range:  0.32473588 0.7152859
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4999186396598816
	Input Std: 0.05029572173953056
	Pred Mean: 0.0002144921600120142
	Pred Std: 0.006639254745095968
	Truth Mean: 0.00028477146406657994
	Truth Std: 0.010015085339546204
Tensor Range:  0.25401133 0.78151137
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5007877349853516
	Input Std: 0.06323093920946121
	Pred Mean: 0.00016629736637696624
	Pred Std: 0.006281400565057993
	Truth Mean: -2.6385054297861643e-05
	Truth Std: 0.011702610179781914
Tensor Range:  0.20448294 0.79048294
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16680565476417542
	Input Std: 0.14208975434303284
	Pred Mean: 0.4013785421848297
	Pred Std: 0.03410711884498596
	Truth Mean: -0.0022710133343935013
	Truth Std: 0.027428751811385155
Tensor Range:  0.00046051707 0.74478054
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10904952138662338
	Input Std: 0.10107319802045822
	Pred Mean: 0.20781858265399933
	Pred Std: 0.016970349475741386
	Truth Mean: -0.0030024200677871704
	Truth Std: 0.023495901376008987
Tensor Range:  1.2870754e-07 0.51750416
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.021561749279499054
	Input Std: 0.02927551604807377
	Pred Mean: -0.16568948328495026
	Pred Std: 0.02508198283612728
	Truth Mean: -0.000773901236243546
	Truth Std: 0.008054637350142002
Tensor Range:  2.4999972e-08 0.19018564
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.819630728685297e-05
	Input Std: 1.0429976100567728e-05
	Pred Mean: -0.2553524971008301
	Pred Std: 0.029277248308062553
	Truth Mean: 3.5419889172771946e-05
	Truth Std: 8.082936801656615e-06
Tensor Range:  8.285881e-08 9.762846e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06351069360971451
	Input Std: 0.001467834459617734
	Pred Mean: 0.06721709668636322
	Pred Std: 0.015961995348334312
	Truth Mean: -7.522842497564852e-05
	Truth Std: 0.00032801367342472076
Tensor Range:  0.058117453 0.069399804
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07963913679122925
	Input Std: 0.0018135298741981387
	Pred Mean: 0.35261043906211853
	Pred Std: 0.028169019147753716
	Truth Mean: -2.084045991068706e-05
	Truth Std: 0.00020966950978618115
Tensor Range:  0.07399755 0.08478368
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12988761067390442
	Input Std: 0.004059219732880592
	Pred Mean: 0.2550605237483978
	Pred Std: 0.025475528091192245
	Truth Mean: 4.090838410775177e-05
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Truth Std: 6.841633876319975e-05
Tensor Range:  0.12042254 0.13482434
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.3121509552001953
	Input Std: 0.004914440680295229
	Pred Mean: 0.04605690389871597
	Pred Std: 0.010521176271140575
	Truth Mean: 4.378460653242655e-05
	Truth Std: 0.00010129845031769946
Tensor Range:  0.29607895 0.3177129
Batch 2
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6250559687614441
	Input Std: 0.09428974986076355
	Pred Mean: -0.17791154980659485
	Pred Std: 0.015105033293366432
	Truth Mean: 0.004673149436712265
	Truth Std: 0.011741788126528263
Tensor Range:  0.2785724 0.8154146
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5959299802780151
	Input Std: 0.07787556201219559
	Pred Mean: -0.24476724863052368
	Pred Std: 0.026123609393835068
	Truth Mean: 0.0024219832848757505
	Truth Std: 0.007496782578527927
Tensor Range:  0.3512562 0.76804566
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.48461925983428955
	Input Std: 0.0702880248427391
	Pred Mean: 0.4308229684829712
	Pred Std: 0.033169519156217575
	Truth Mean: -0.0004391818365547806
	Truth Std: 0.0028254801873117685
Tensor Range:  0.34137285 0.5932675
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.27812209725379944
	Input Std: 0.06575886905193329
	Pred Mean: 0.11263172328472137
	Pred Std: 0.020226934924721718
	Truth Mean: 1.1956080015806947e-05
	Truth Std: 0.003793912474066019
Tensor Range:  0.1428711 0.4117658
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5018380284309387
	Input Std: 0.02837265655398369
	Pred Mean: 0.0001727677445160225
	Pred Std: 0.005927500780671835
	Truth Mean: -0.00016319444694090635
	Truth Std: 0.006233158055692911
Tensor Range:  0.36038077 0.6298808
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5084108114242554
	Input Std: 0.03792337328195572
	Pred Mean: -0.0001396821899106726
	Pred Std: 0.005228480789810419
	Truth Mean: 0.00029299655579961836
	Truth Std: 0.007674921303987503
Tensor Range:  0.331862 0.6955438
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.532223105430603
	Input Std: 0.055125314742326736
	Pred Mean: 1.8068285498884507e-05
	Pred Std: 0.005801163148134947
	Truth Mean: 0.0003639681381173432
	Truth Std: 0.00859214086085558
Tensor Range:  0.3701846 0.80473006
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5365743041038513
	Input Std: 0.05339450016617775
	Pred Mean: -0.00034468728699721396
	Pred Std: 0.013421211391687393
	Truth Mean: 0.0006097817677073181
	Truth Std: 0.007937154732644558
Tensor Range:  0.4137834 0.75773793
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4986046552658081
	Input Std: 0.025972500443458557
	Pred Mean: -7.496347825508565e-05
	Pred Std: 0.0072610690258443356
	Truth Mean: 6.241600203793496e-05
	Truth Std: 0.00712101673707366
Tensor Range:  0.36904776 0.6371478
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4995115399360657
	Input Std: 0.030669717118144035
	Pred Mean: 0.000518930028192699
	Pred Std: 0.005334178451448679
	Truth Mean: 0.0002538849366828799
	Truth Std: 0.008444736711680889
Tensor Range:  0.28977805 0.740678
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49999845027923584
	Input Std: 0.04396212473511696
	Pred Mean: 0.00043070982792414725
	Pred Std: 0.006627949886023998
	Truth Mean: 3.873877722071484e-05
	Truth Std: 0.00947398878633976
Tensor Range:  0.2368594 0.7668594
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5002467036247253
	Input Std: 0.031166885048151016
	Pred Mean: 0.0003436891420278698
	Pred Std: 0.006232941523194313
	Truth Mean: -8.075254299910739e-06
	Truth Std: 0.008032392710447311
Tensor Range:  0.35347164 0.63872164
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16631993651390076
	Input Std: 0.13797461986541748
	Pred Mean: 0.4017142057418823
	Pred Std: 0.031199632212519646
	Truth Mean: -0.002074438612908125
	Truth Std: 0.0275848638266325
Tensor Range:  0.00015972716 0.6877118
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10824395716190338
	Input Std: 0.09586206823587418
	Pred Mean: 0.20801793038845062
	Pred Std: 0.015491661615669727
	Truth Mean: -0.002952410141006112
	Truth Std: 0.022731533274054527
Tensor Range:  1.3951191e-07 0.47653615
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.0212948527187109
	Input Std: 0.029095828533172607
	Pred Mean: -0.1659664809703827
	Pred Std: 0.02369370125234127
	Truth Mean: -0.000656446092762053
	Truth Std: 0.007606659550219774
Tensor Range:  2.4999903e-08 0.14700483
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.9206981455208734e-05
	Input Std: 1.108021751861088e-05
	Pred Mean: -0.2557085156440735
	Pred Std: 0.028322935104370117
	Truth Mean: 3.471812669886276e-05
	Truth Std: 8.74706165632233e-06
Tensor Range:  2.5775357e-08 8.240658e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.0633700042963028
	Input Std: 0.0014732925919815898
	Pred Mean: 0.06729678809642792
	Pred Std: 0.01595182716846466
	Truth Mean: -6.57643613521941e-05
	Truth Std: 0.0003063579206354916
Tensor Range:  0.056967568 0.06738204
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07949917018413544
	Input Std: 0.0019078960176557302
	Pred Mean: 0.35284650325775146
	Pred Std: 0.025720473378896713
	Truth Mean: -1.2805046935682185e-05
	Truth Std: 0.00019654363859444857
Tensor Range:  0.07277384 0.0828941
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1297081708908081
	Input Std: 0.004256988409906626
	Pred Mean: 0.2551717162132263
	Pred Std: 0.023459773510694504
	Truth Mean: 3.957030639867298e-05
	Truth Std: 6.659141945419833e-05
Tensor Range:  0.12109017 0.13540886
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.3111972510814667
	Input Std: 0.00635572150349617
	Pred Mean: 0.04605015367269516
	Pred Std: 0.010133838281035423
	Truth Mean: 4.366568100522272e-05
	Truth Std: 9.490298543823883e-05
Tensor Range:  0.2935169 0.31712154
Batch 3
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6254223585128784
	Input Std: 0.09724758565425873
	Pred Mean: -0.1779329776763916
	Pred Std: 0.01518038660287857
	Truth Mean: 0.0035116695798933506
	Truth Std: 0.012562001124024391
Tensor Range:  0.30803633 0.8338258
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5950807332992554
	Input Std: 0.07969702780246735
	Pred Mean: -0.2447347640991211
	Pred Std: 0.026219498366117477
	Truth Mean: 0.0021223905496299267
	Truth Std: 0.00909767858684063
Tensor Range:  0.3378176 0.7860808
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.48222750425338745
	Input Std: 0.07312631607055664
	Pred Mean: 0.4308541715145111
	Pred Std: 0.03370783105492592
	Truth Mean: -0.0003236634365748614
	Truth Std: 0.0028788666240870953
Tensor Range:  0.30924112 0.6008201
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.27992960810661316
	Input Std: 0.06512215733528137
	Pred Mean: 0.1125774085521698
	Pred Std: 0.020287958905100822
	Truth Mean: -0.0003105186624452472
	Truth Std: 0.003970438614487648
Tensor Range:  0.14231366 0.40815574
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49990084767341614
	Input Std: 0.026641443371772766
	Pred Mean: 0.00017241595196537673
	Pred Std: 0.005867250729352236
	Truth Mean: -0.0001307840138906613
	Truth Std: 0.006092417985200882
Tensor Range:  0.39842537 0.6034253
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5056862235069275
	Input Std: 0.035779017955064774
	Pred Mean: -0.00015146640362218022
	Pred Std: 0.0052532050758600235
	Truth Mean: 0.00022344452736433595
	Truth Std: 0.007635845802724361
Tensor Range:  0.36493093 0.6645673
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5303156971931458
	Input Std: 0.05526234954595566
	Pred Mean: 4.279368295101449e-05
	Pred Std: 0.005811166483908892
	Truth Mean: 0.000182511837920174
	Truth Std: 0.008965964429080486
Tensor Range:  0.35351905 0.75933725
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5322094559669495
	Input Std: 0.05339057743549347
	Pred Mean: -0.0003182483487762511
	Pred Std: 0.013488580472767353
	Truth Mean: 0.000588871946092695
	Truth Std: 0.008116780780255795
Tensor Range:  0.39922962 0.75286597
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4983423054218292
	Input Std: 0.025938114151358604
	Pred Mean: -3.210694558219984e-05
	Pred Std: 0.007283587474375963
	Truth Mean: 0.0003574555739760399
	Truth Std: 0.007006866857409477
Tensor Range:  0.37278548 0.63183546
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4993307590484619
	Input Std: 0.029842009767889977
	Pred Mean: 0.0004684864543378353
	Pred Std: 0.005459964275360107
	Truth Mean: 0.00011343528603902087
	Truth Std: 0.008231040090322495
Tensor Range:  0.320487 0.69368696
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4993900954723358
	Input Std: 0.044033899903297424
	Pred Mean: 0.000362602062523365
	Pred Std: 0.006572197191417217
	Truth Mean: 0.0002685610670596361
	Truth Std: 0.009520099498331547
Tensor Range:  0.29391724 0.7310672
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5005378127098083
	Input Std: 0.04324578493833542
	Pred Mean: 0.0003188569680787623
	Pred Std: 0.006290782708674669
	Truth Mean: 0.00030459152185358107
	Truth Std: 0.008427816443145275
Tensor Range:  0.3065652 0.68226516
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1663503795862198
	Input Std: 0.13916140794754028
	Pred Mean: 0.40160641074180603
	Pred Std: 0.03205522522330284
	Truth Mean: -0.0004963776445947587
	Truth Std: 0.027482517063617706
Tensor Range:  0.0003219055 0.75086594
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1102173775434494
	Input Std: 0.09777505695819855
	Pred Mean: 0.20794302225112915
	Pred Std: 0.015979953110218048
	Truth Mean: -0.002790584694594145
	Truth Std: 0.02391255646944046
Tensor Range:  1.2020112e-07 0.52217615
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.020761845633387566
	Input Std: 0.028793776407837868
	Pred Mean: -0.165915846824646
	Pred Std: 0.023609787225723267
	Truth Mean: -0.0007703457958996296
	Truth Std: 0.00782157015055418
Tensor Range:  2.5000002e-08 0.15811203
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.882636156049557e-05
	Input Std: 1.1125737728434615e-05
	Pred Mean: -0.2556735575199127
	Pred Std: 0.02831893600523472
	Truth Mean: 3.496083809295669e-05
	Truth Std: 8.765405254962388e-06
Tensor Range:  1.2273682e-09 8.978683e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06351989507675171
	Input Std: 0.0014201912563294172
	Pred Mean: 0.0672915130853653
	Pred Std: 0.015943173319101334
	Truth Mean: -6.805638986406848e-05
	Truth Std: 0.000353496172465384
Tensor Range:  0.05811073 0.068467334
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07964552938938141
	Input Std: 0.001750264666043222
	Pred Mean: 0.3528415560722351
	Pred Std: 0.026243722066283226
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Truth Mean: -1.5898105630185455e-05
	Truth Std: 0.00022342029842548072
Tensor Range:  0.073900715 0.08370363
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12978225946426392
	Input Std: 0.0041122036054730415
	Pred Mean: 0.2551887035369873
	Pred Std: 0.023846307769417763
	Truth Mean: 4.4433432776713744e-05
	Truth Std: 6.141173798823729e-05
Tensor Range:  0.12156129 0.13500449
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.31133654713630676
	Input Std: 0.005874397233128548
	Pred Mean: 0.04602920636534691
	Pred Std: 0.010183808393776417
	Truth Mean: 2.744869198068045e-05
	Truth Std: 8.687201625434682e-05
Tensor Range:  0.29414436 0.3172851
Batch 4
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6259670853614807
	Input Std: 0.09616688638925552
	Pred Mean: -0.17790447175502777
	Pred Std: 0.015217275358736515
	Truth Mean: 0.0026259818114340305
	Truth Std: 0.011321471072733402
Tensor Range:  0.29024 0.8281348
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5951828360557556
	Input Std: 0.07850083708763123
	Pred Mean: -0.24477969110012054
	Pred Std: 0.02625587210059166
	Truth Mean: 0.0016385511262342334
	Truth Std: 0.007387194316834211
Tensor Range:  0.34409446 0.7729365
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4836539924144745
	Input Std: 0.07097499072551727
	Pred Mean: 0.4308058023452759
	Pred Std: 0.033680614084005356
	Truth Mean: -0.00040511213592253625
	Truth Std: 0.002738934475928545
Tensor Range:  0.32409033 0.5919324
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.27839139103889465
	Input Std: 0.06659571081399918
	Pred Mean: 0.11260426789522171
	Pred Std: 0.020367583259940147
	Truth Mean: -0.00023007206618785858
	Truth Std: 0.0039011347107589245
Tensor Range:  0.15336865 0.4114739
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49971020221710205
	Input Std: 0.030096471309661865
	Pred Mean: 0.0001284749887418002
	Pred Std: 0.005880232900381088
	Truth Mean: 8.152908776537515e-06
	Truth Std: 0.006344671826809645
Tensor Range:  0.41060328 0.6272851
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5059938430786133
	Input Std: 0.04037962853908539
	Pred Mean: -0.00023114030773285776
	Pred Std: 0.005306520499289036
	Truth Mean: 0.00015867716865614057
	Truth Std: 0.007705812342464924
Tensor Range:  0.34204322 0.67163414
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5303499698638916
	Input Std: 0.05917080119252205
	Pred Mean: 4.294770769774914e-05
	Pred Std: 0.005826381500810385
	Truth Mean: 0.0005219842423684895
	Truth Std: 0.008850816637277603
Tensor Range:  0.35452318 0.772205
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5349178910255432
	Input Std: 0.05455940589308739
	Pred Mean: -0.00022713608632329851
	Pred Std: 0.013535157777369022
	Truth Mean: 8.663807238917798e-05
	Truth Std: 0.0077979350462555885
Tensor Range:  0.40716276 0.7434355
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4980604350566864
	Input Std: 0.025976259261369705
	Pred Mean: -5.1108287152601406e-05
	Pred Std: 0.007263272535055876
	Truth Mean: 0.00036415320937521756
	Truth Std: 0.0067198872566223145
Tensor Range:  0.38198224 0.6326822
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.499457985162735
	Input Std: 0.02786301262676716
	Pred Mean: 0.0005352160660549998
	Pred Std: 0.00545088853687048
	Truth Mean: 0.00042724094237200916
	Truth Std: 0.00810448918491602
Tensor Range:  0.3629536 0.6888536
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4998052418231964
	Input Std: 0.040819812566041946
	Pred Mean: 0.0004283289017621428
	Pred Std: 0.006602179724723101
	Truth Mean: 0.000302453845506534
	Truth Std: 0.009097718633711338
Tensor Range:  0.29482666 0.7577766
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4988570809364319
	Input Std: 0.03168073296546936
	Pred Mean: 0.000330581417074427
	Pred Std: 0.006232313346117735
	Truth Mean: 0.00037916089058853686
	Truth Std: 0.008147001266479492
Tensor Range:  0.34783402 0.68393403
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1644521802663803
	Input Std: 0.1377357691526413
	Pred Mean: 0.4015865921974182
	Pred Std: 0.031745120882987976
	Truth Mean: -0.0024704833049327135
	Truth Std: 0.025906627997756004
Tensor Range:  0.0002174746 0.63104945
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10872621089220047
	Input Std: 0.09799078851938248
	Pred Mean: 0.20797324180603027
	Pred Std: 0.01576303318142891
	Truth Mean: -0.0034387088380753994
	Truth Std: 0.022510338574647903
Tensor Range:  2.1167e-05 0.43567717
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.02133357897400856
	Input Std: 0.028187332674860954
	Pred Mean: -0.16592693328857422
	Pred Std: 0.023807276040315628
	Truth Mean: -0.0007491481956094503
	Truth Std: 0.007652995642274618
Tensor Range:  2.500002e-08 0.15712322
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.887313505401835e-05
	Input Std: 1.1088228347944096e-05
	Pred Mean: -0.25571250915527344
	Pred Std: 0.028393948450684547
	Truth Mean: 3.484333501546644e-05
	Truth Std: 8.878751941665541e-06
Tensor Range:  2.9813673e-08 8.516742e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06340163201093674
	Input Std: 0.0016152577009052038
	Pred Mean: 0.0673416256904602
	Pred Std: 0.015951527282595634
	Truth Mean: -5.685044379788451e-05
	Truth Std: 0.00023393060837406665
Tensor Range:  0.057172596 0.06835983
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07952695339918137
	Input Std: 0.001990844262763858
	Pred Mean: 0.3528963029384613
	Pred Std: 0.026233211159706116
	Truth Mean: -1.2288413017813582e-05
	Truth Std: 0.00015247704868670553
Tensor Range:  0.07303818 0.08350031
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1297173649072647
	Input Std: 0.004297454375773668
	Pred Mean: 0.25514307618141174
	Pred Std: 0.023837249726057053
	Truth Mean: 3.321368058095686e-05
	Truth Std: 7.281452417373657e-05
Tensor Range:  0.12150496 0.13527423
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.3111077547073364
	Input Std: 0.006395403295755386
	Pred Mean: 0.04603512957692146
	Pred Std: 0.010148759931325912
	Truth Mean: 2.6064688427140936e-05
	Truth Std: 0.00010607480362523347
Tensor Range:  0.29425508 0.31762138
Batch 5
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6248825788497925
	Input Std: 0.09659353643655777
	Pred Mean: -0.17789843678474426
	Pred Std: 0.015237979590892792
	Truth Mean: 0.003839729819446802
	Truth Std: 0.01262969896197319
Tensor Range:  0.27988988 0.82094246
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5945377945899963
	Input Std: 0.07962846010923386
	Pred Mean: -0.24478109180927277
	Pred Std: 0.026228254660964012
	Truth Mean: 0.0022319061681628227
	Truth Std: 0.008308816701173782
Tensor Range:  0.34255147 0.7702357
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4837424159049988
	Input Std: 0.0712486132979393
	Pred Mean: 0.4307897388935089
	Pred Std: 0.03370988368988037
	Truth Mean: -0.00036326737608760595
	Truth Std: 0.0028060348704457283
Tensor Range:  0.31994644 0.5932622
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2782132625579834
	Input Std: 0.06606069207191467
	Pred Mean: 0.11260291934013367
	Pred Std: 0.020358212292194366
	Truth Mean: -0.0001736815320327878
	Truth Std: 0.00379973859526217
Tensor Range:  0.15210523 0.41152632
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5003060698509216
	Input Std: 0.02944803610444069
	Pred Mean: 0.0001397316955262795
	Pred Std: 0.005891313310712576
	Truth Mean: -0.00019581997185014188
	Truth Std: 0.006297135725617409
Tensor Range:  0.39149073 0.61308163
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5065506100654602
	Input Std: 0.03930923715233803
	Pred Mean: -0.0002211815008195117
	Pred Std: 0.0053179445676505566
	Truth Mean: -3.712745092343539e-05
	Truth Std: 0.007612027693539858
Tensor Range:  0.34175298 0.68116206
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5307756066322327
	Input Std: 0.05714987963438034
	Pred Mean: 3.441991066210903e-05
	Pred Std: 0.005831836257129908
	Truth Mean: 0.00041632744250819087
	Truth Std: 0.008570854552090168
Tensor Range:  0.37721726 0.77417177
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5359373688697815
	Input Std: 0.05438924953341484
	Pred Mean: -0.0002451646432746202
	Pred Std: 0.013532702811062336
	Truth Mean: -0.00017631790251471102
	Truth Std: 0.007574726361781359
Tensor Range:  0.41013837 0.7290929
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49817314743995667
	Input Std: 0.027169208973646164
	Pred Mean: -6.642490916419774e-05
	Pred Std: 0.007272551767528057
	Truth Mean: 0.0001678996195551008
	Truth Std: 0.006968391127884388
Tensor Range:  0.36549994 0.63539994
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4997011721134186
	Input Std: 0.0292188860476017
	Pred Mean: 0.0005321181379258633
	Pred Std: 0.005460603162646294
	Truth Mean: -2.7790762032964267e-05
	Truth Std: 0.008028014563024044
Tensor Range:  0.35898384 0.71623385
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4999670088291168
	Input Std: 0.04318684712052345
	Pred Mean: 0.0004258537956047803
	Pred Std: 0.006606359966099262
	Truth Mean: 0.00019088966655544937
	Truth Std: 0.009105558507144451
Tensor Range:  0.27277106 0.74517107
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.500494122505188
	Input Std: 0.0312846340239048
	Pred Mean: 0.00032578103127889335
	Pred Std: 0.006227123085409403
	Truth Mean: 5.03106348332949e-05
	Truth Std: 0.008109215646982193
Tensor Range:  0.34662753 0.66972756
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1644829958677292
	Input Std: 0.13843023777008057
	Pred Mean: 0.4015941619873047
	Pred Std: 0.03171264007687569
	Truth Mean: -0.000593434611801058
	Truth Std: 0.026009732857346535
Tensor Range:  0.00016571536 0.7138297
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10832621902227402
	Input Std: 0.09781437367200851
	Pred Mean: 0.20798446238040924
	Pred Std: 0.01576845347881317
	Truth Mean: -0.003104414092376828
	Truth Std: 0.02256474830210209
Tensor Range:  1.00197994e-07 0.4959681
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.021243242546916008
	Input Std: 0.028031570836901665
	Pred Mean: -0.16593362390995026
	Pred Std: 0.02387743629515171
	Truth Mean: -0.0009117704466916621
	Truth Std: 0.007686124183237553
Tensor Range:  2.5000015e-08 0.15222402
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.891741653205827e-05
	Input Std: 1.1055170944018755e-05
	Pred Mean: -0.2557051479816437
	Pred Std: 0.028434429317712784
	Truth Mean: 3.4854932891903445e-05
	Truth Std: 8.759897355048452e-06
Tensor Range:  2.908748e-08 8.463389e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06341077387332916
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Input Std: 0.0016103086527436972
	Pred Mean: 0.06734468042850494
	Pred Std: 0.01595410145819187
	Truth Mean: -6.922513421159238e-05
	Truth Std: 0.000308112648781389
Tensor Range:  0.056558765 0.069334626
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07952865213155746
	Input Std: 0.001978498650714755
	Pred Mean: 0.35287854075431824
	Pred Std: 0.026228591799736023
	Truth Mean: -1.8515393094276078e-05
	Truth Std: 0.0002018670056713745
Tensor Range:  0.072424866 0.08420108
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12970536947250366
	Input Std: 0.0043036057613790035
	Pred Mean: 0.2551250755786896
	Pred Std: 0.02381184697151184
	Truth Mean: 3.686784839374013e-05
	Truth Std: 6.725899584125727e-05
Tensor Range:  0.120816104 0.13540864
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.3110966086387634
	Input Std: 0.006430947687476873
	Pred Mean: 0.04604150727391243
	Pred Std: 0.010201198048889637
	Truth Mean: 2.4084632968879305e-05
	Truth Std: 8.840987720759585e-05
Tensor Range:  0.29431438 0.31740707
Batch 6
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6246646046638489
	Input Std: 0.09509123861789703
	Pred Mean: -0.17789675295352936
	Pred Std: 0.015545147471129894
	Truth Mean: 0.0029931047465652227
	Truth Std: 0.012043733149766922
Tensor Range:  0.34174082 0.80910933
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5967370271682739
	Input Std: 0.07637067139148712
	Pred Mean: -0.2446557581424713
	Pred Std: 0.026384003460407257
	Truth Mean: 0.0012280303053557873
	Truth Std: 0.007283339276909828
Tensor Range:  0.36616588 0.7517448
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4841912090778351
	Input Std: 0.07110556960105896
	Pred Mean: 0.4308285713195801
	Pred Std: 0.03444056585431099
	Truth Mean: -0.0003397790715098381
	Truth Std: 0.002789668506011367
Tensor Range:  0.3197863 0.59547055
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.28035667538642883
	Input Std: 0.06384440511465073
	Pred Mean: 0.11252763122320175
	Pred Std: 0.020620979368686676
	Truth Mean: -0.00026966602308675647
	Truth Std: 0.003911503590643406
Tensor Range:  0.13735247 0.4059314
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5000837445259094
	Input Std: 0.02789740264415741
	Pred Mean: 0.00029200626886449754
	Pred Std: 0.0060411738231778145
	Truth Mean: 8.199165313271806e-05
	Truth Std: 0.006215560715645552
Tensor Range:  0.37215954 0.6197959
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5056953430175781
	Input Std: 0.037023916840553284
	Pred Mean: -0.0002389477303950116
	Pred Std: 0.005402981769293547
	Truth Mean: 0.00012945590424351394
	Truth Std: 0.007653912529349327
Tensor Range:  0.28717986 0.69890714
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5290890336036682
	Input Std: 0.05682676285505295
	Pred Mean: -1.9940596303058555e-06
	Pred Std: 0.005874073598533869
	Truth Mean: 8.122841973090544e-05
	Truth Std: 0.008477420546114445
Tensor Range:  0.36984044 0.7557495
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5305888056755066
	Input Std: 0.054395291954278946
	Pred Mean: -0.0003823896695394069
	Pred Std: 0.013600176200270653
	Truth Mean: 0.00018167939560953528
	Truth Std: 0.008311290293931961
Tensor Range:  0.3806904 0.74773586
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4988776445388794
	Input Std: 0.0269186869263649
	Pred Mean: -4.847572563448921e-05
	Pred Std: 0.007297968026250601
	Truth Mean: 0.00014953745994716883
	Truth Std: 0.006988224573433399
Tensor Range:  0.36709073 0.62889075
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.499355673789978
	Input Std: 0.03130587190389633
	Pred Mean: 0.0005334294401109219
	Pred Std: 0.005579426884651184
	Truth Mean: 0.000151317217387259
	Truth Std: 0.008255761116743088
Tensor Range:  0.29390296 0.744203
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5002686381340027
	Input Std: 0.046201884746551514
	Pred Mean: 0.000284810084849596
	Pred Std: 0.00662601925432682
	Truth Mean: 0.0003240584337618202
	Truth Std: 0.00936080515384674
Tensor Range:  0.26011455 0.79861456
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4994460940361023
	Input Std: 0.04795539006590843
	Pred Mean: 0.00025407280190847814
	Pred Std: 0.006313254125416279
	Truth Mean: -0.0002537932596169412
	Truth Std: 0.008824451826512814
Tensor Range:  0.26263607 0.719986
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16652773320674896
	Input Std: 0.14088979363441467
	Pred Mean: 0.40150266885757446
	Pred Std: 0.033303629606962204
	Truth Mean: -0.0008902453118935227
	Truth Std: 0.02666722983121872
Tensor Range:  0.000746045 0.697578
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.11038027703762054
	Input Std: 0.09868977218866348
	Pred Mean: 0.20792046189308167
	Pred Std: 0.016468381509184837
	Truth Mean: -0.002166286576539278
	Truth Std: 0.024396143853664398
Tensor Range:  1.7702725e-07 0.48193622
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.020861491560935974
	Input Std: 0.02881447970867157
	Pred Mean: -0.1657976657152176
	Pred Std: 0.02419276349246502
	Truth Mean: -0.0008919282699935138
	Truth Std: 0.007692330051213503
Tensor Range:  2.5000022e-08 0.15843202
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.844136153929867e-05
	Input Std: 1.0753603419288993e-05
	Pred Mean: -0.2555059790611267
	Pred Std: 0.028727136552333832
	Truth Mean: 3.525291322148405e-05
	Truth Std: 8.4491530287778e-06
Tensor Range:  2.5e-08 /home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
8.67338e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06347332149744034
	Input Std: 0.0013908905675634742
	Pred Mean: 0.06727031618356705
	Pred Std: 0.01594826579093933
	Truth Mean: -4.262828952050768e-05
	Truth Std: 0.00022072403226047754
Tensor Range:  0.05801761 0.068069816
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07960847020149231
	Input Std: 0.0017452778993174434
	Pred Mean: 0.3527868092060089
	Pred Std: 0.026886459439992905
	Truth Mean: 6.79929712532612e-07
	Truth Std: 0.0001409436808899045
Tensor Range:  0.07428066 0.08344948
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12980470061302185
	Input Std: 0.00405515730381012
	Pred Mean: 0.2551281452178955
	Pred Std: 0.024500375613570213
	Truth Mean: 4.362792969914153e-05
	Truth Std: 5.868430162081495e-05
Tensor Range:  0.12082832 0.13496952
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.31147637963294983
	Input Std: 0.005719243083149195
	Pred Mean: 0.04607710987329483
	Pred Std: 0.010230697691440582
	Truth Mean: 3.515149001032114e-05
	Truth Std: 7.877516327425838e-05
Tensor Range:  0.29526266 0.3174051
Batch 7
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6316706538200378
	Input Std: 0.08968399465084076
	Pred Mean: -0.17784206569194794
	Pred Std: 0.01551923155784607
	Truth Mean: 0.0027661167550832033
	Truth Std: 0.012081122025847435
Tensor Range:  0.3441909 0.82208556
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6009383797645569
	Input Std: 0.07160383462905884
	Pred Mean: -0.244672030210495
	Pred Std: 0.026334334164857864
	Truth Mean: 0.0012891172664240003
	Truth Std: 0.006855738814920187
Tensor Range:  0.3736134 0.7639292
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.48620033264160156
	Input Std: 0.06734902411699295
	Pred Mean: 0.4307578504085541
	Pred Std: 0.03406278043985367
	Truth Mean: -0.00034086997038684785
	Truth Std: 0.0028418758884072304
Tensor Range:  0.33423543 0.5960775
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2772640585899353
	Input Std: 0.06636914610862732
	Pred Mean: 0.11248611658811569
	Pred Std: 0.020625010132789612
	Truth Mean: -7.380002352874726e-05
	Truth Std: 0.0037708801683038473
Tensor Range:  0.1476553 0.430708
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49983638525009155
	Input Std: 0.028725916519761086
	Pred Mean: 0.00017021455278154463
	Pred Std: 0.00600160239264369
	Truth Mean: -3.0316776246763766e-05
	Truth Std: 0.006117211654782295
Tensor Range:  0.37540466 0.60413194
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5064041614532471
	Input Std: 0.038686878979206085
	Pred Mean: -0.00021647127869073302
	Pred Std: 0.005217984784394503
	Truth Mean: 7.341133459703997e-05
	Truth Std: 0.007423864211887121
Tensor Range:  0.3344638 0.6572366
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5290517210960388
	Input Std: 0.05930336192250252
	Pred Mean: 5.3148920414969325e-05
	Pred Std: 0.005959250032901764
	Truth Mean: 0.00047467826516367495
	Truth Std: 0.008869015611708164
Tensor Range:  0.31653947 0.81113034
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5380500555038452
	Input Std: 0.04836577922105789
	Pred Mean: -0.00033672855352051556
	Pred Std: 0.013751174323260784
	Truth Mean: 0.000381109188310802
	Truth Std: 0.00821155309677124
Tensor Range:  0.4052016 0.704838
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49801117181777954
	Input Std: 0.024730687960982323
	Pred Mean: -0.00014373076555784792
	Pred Std: 0.007332708220928907
	Truth Mean: 0.0005644649500027299
	Truth Std: 0.006761100608855486
Tensor Range:  0.3762368 0.62648684
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4985697567462921
	Input Std: 0.028371771797537804
	Pred Mean: 0.0005011072498746216
	Pred Std: 0.005369118414819241
	Truth Mean: 0.00017858917999546975
	Truth Std: 0.008073395118117332
Tensor Range:  0.32793826 0.7232883
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5002506971359253
	Input Std: 0.04104728251695633
	Pred Mean: 0.000423484540078789
	Pred Std: 0.006721337325870991
	Truth Mean: 2.4548910005250946e-05
	Truth Std: 0.00925113633275032
Tensor Range:  0.27426946 0.7531695
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5000492334365845
	Input Std: 0.023196840658783913
	Pred Mean: 0.00018779731180984527
	Pred Std: 0.006104066036641598
	Truth Mean: -0.0001902579824673012
	Truth Std: 0.008346867747604847
Tensor Range:  0.41404068 0.5832407
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16907653212547302
	Input Std: 0.13604110479354858
	Pred Mean: 0.40179985761642456
	Pred Std: 0.031119542196393013
	Truth Mean: -0.003907852340489626
	Truth Std: 0.028216468170285225
Tensor Range:  0.00080007996 0.6987361
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.11187640577554703
	Input Std: 0.0965639129281044
	Pred Mean: 0.20812858641147614
	Pred Std: 0.015603999607264996
	Truth Mean: -0.003854596521705389
	Truth Std: 0.02319863624870777
Tensor Range:  5.1358616e-05 0.48462737
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.02093029022216797
	Input Std: 0.02813708409667015
	Pred Mean: -0.16587550938129425
	Pred Std: 0.024437451735138893
	Truth Mean: -0.0007569207809865475
	Truth Std: 0.007687152363359928
Tensor Range:  2.4999947e-08 0.17575362
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Input Mean: 3.940384340239689e-05
	Input Std: 1.0861011105589569e-05
	Pred Mean: -0.2557351887226105
	Pred Std: 0.028719883412122726
	Truth Mean: 3.49007714248728e-05
	Truth Std: 8.821163646643981e-06
Tensor Range:  4.344807e-08 8.710265e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06335349380970001
	Input Std: 0.0015717758797109127
	Pred Mean: 0.06731808930635452
	Pred Std: 0.015964331105351448
	Truth Mean: -2.102555663441308e-05
	Truth Std: 0.00015095548587851226
Tensor Range:  0.057812855 0.068506226
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07954967767000198
	Input Std: 0.001962617738172412
	Pred Mean: 0.3528138995170593
	Pred Std: 0.026491833850741386
	Truth Mean: 7.877566531533375e-06
	Truth Std: 9.444683382753283e-05
Tensor Range:  0.073913544 0.08399733
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12986324727535248
	Input Std: 0.004142772406339645
	Pred Mean: 0.2550867795944214
	Pred Std: 0.024133099243044853
	Truth Mean: 4.260395508026704e-05
	Truth Std: 6.884677713969722e-05
Tensor Range:  0.122176096 0.13499388
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.31115859746932983
	Input Std: 0.005969863850623369
	Pred Mean: 0.04605720192193985
	Pred Std: 0.010294448584318161
	Truth Mean: 4.8872367187868804e-05
	Truth Std: 9.585250518284738e-05
Tensor Range:  0.2955921 0.31738052
Batch 8
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6267486214637756
	Input Std: 0.09579978883266449
	Pred Mean: -0.1779199093580246
	Pred Std: 0.01504259929060936
	Truth Mean: 0.0028657119255512953
	Truth Std: 0.011380843818187714
Tensor Range:  0.3040256 0.834552
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5958445072174072
	Input Std: 0.07864795625209808
	Pred Mean: -0.24480275809764862
	Pred Std: 0.02613767609000206
	Truth Mean: 0.0017381607322022319
	Truth Std: 0.007335994858294725
Tensor Range:  0.3616142 0.769088
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.48440250754356384
	Input Std: 0.07056824117898941
	Pred Mean: 0.4308883547782898
	Pred Std: 0.03305952250957489
	Truth Mean: -0.0002796215994749218
	Truth Std: 0.002923056250438094
Tensor Range:  0.31970423 0.59202
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.27742648124694824
	Input Std: 0.06618054956197739
	Pred Mean: 0.11261057108640671
	Pred Std: 0.02020927518606186
	Truth Mean: -0.00016916728054638952
	Truth Std: 0.0038648704066872597
Tensor Range:  0.14175905 0.41007483
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5010660290718079
	Input Std: 0.028765009716153145
	Pred Mean: 0.0001968223659787327
	Pred Std: 0.005873240530490875
	Truth Mean: -0.0002285928203491494
	Truth Std: 0.006193371489644051
Tensor Range:  0.35794327 0.6161706
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5082414746284485
	Input Std: 0.03781958296895027
	Pred Mean: -0.00017723698692861944
	Pred Std: 0.005252146162092686
	Truth Mean: 7.819676829967648e-05
	Truth Std: 0.007684304844588041
Tensor Range:  0.32900614 0.67468786
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5317597389221191
	Input Std: 0.05471276864409447
	Pred Mean: -6.795410627091769e-06
	Pred Std: 0.00580894248560071
	Truth Mean: 0.0004153192276135087
	Truth Std: 0.009103778749704361
Tensor Range:  0.3655871 0.8401781
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5355493426322937
	Input Std: 0.054532382637262344
	Pred Mean: -0.00029321954934857786
	Pred Std: 0.013453361578285694
	Truth Mean: -6.468022183980793e-05
	Truth Std: 0.007854175753891468
Tensor Range:  0.40586284 0.79777193
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49833422899246216
	Input Std: 0.026247572153806686
	Pred Mean: -7.875401206547394e-05
	Pred Std: 0.007259217090904713
	Truth Mean: 0.00026095539215020835
	Truth Std: 0.006978895980864763
Tensor Range:  0.37072825 0.63482827
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.499453604221344
	Input Std: 0.03039953112602234
	Pred Mean: 0.0005443615955300629
	Pred Std: 0.005358512047678232
	Truth Mean: 0.00046579272020608187
	Truth Std: 0.008241897448897362
Tensor Range:  0.32019424 0.68909425
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4999881386756897
	Input Std: 0.043038323521614075
	Pred Mean: 0.0004031248390674591
	Pred Std: 0.006606891751289368
	Truth Mean: 3.349927646922879e-05
	Truth Std: 0.009647340513765812
Tensor Range:  0.26475835 0.7079584
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4993390738964081
	Input Std: 0.028057493269443512
	Pred Mean: 0.00032630894565954804
	Pred Std: 0.006228276062756777
	Truth Mean: 0.0005507577443495393
	Truth Std: 0.008363739587366581
Tensor Range:  0.3827474 0.61929744
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16553299129009247
	Input Std: 0.13698473572731018
	Pred Mean: 0.40167737007141113
	Pred Std: 0.031023072078824043
	Truth Mean: -0.002138422569260001
	Truth Std: 0.026893828064203262
Tensor Range:  0.000310133 0.63440615
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10790874809026718
	Input Std: 0.09630807489156723
	Pred Mean: 0.20801249146461487
	Pred Std: 0.015411991626024246
	Truth Mean: -0.0024147131480276585
	Truth Std: 0.02239375375211239
Tensor Range:  3.691104e-05 0.43827692
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.021040156483650208
	Input Std: 0.028682652860879898
	Pred Mean: -0.16597868502140045
	Pred Std: 0.02359739877283573
	Truth Mean: -0.0007607356528751552
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Truth Std: 0.007732180878520012
Tensor Range:  2.500006e-08 0.16613123
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.935207860195078e-05
	Input Std: 1.1679207091219723e-05
	Pred Mean: -0.25567612051963806
	Pred Std: 0.02824137732386589
	Truth Mean: 3.4477598092053086e-05
	Truth Std: 9.330373359262012e-06
Tensor Range:  7.3304875e-07 8.4641855e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06336744129657745
	Input Std: 0.00156824616715312
	Pred Mean: 0.0672912672162056
	Pred Std: 0.015953578054904938
	Truth Mean: -5.093517393106595e-05
	Truth Std: 0.0002391543675912544
Tensor Range:  0.057850253 0.068584606
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07949922233819962
	Input Std: 0.0019417544826865196
	Pred Mean: 0.3528963625431061
	Pred Std: 0.02565922401845455
	Truth Mean: -7.675260349060409e-06
	Truth Std: 0.00014816957991570234
Tensor Range:  0.07364662 0.0831477
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12970395386219025
	Input Std: 0.004244470968842506
	Pred Mean: 0.25512635707855225
	Pred Std: 0.023349981755018234
	Truth Mean: 3.856123294099234e-05
	Truth Std: 6.955958815524355e-05
Tensor Range:  0.12155043 0.13525523
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.31113967299461365
	Input Std: 0.006387547589838505
	Pred Mean: 0.04611920192837715
	Pred Std: 0.0100872116163373
	Truth Mean: 3.498040314298123e-05
	Truth Std: 0.00010371282405685633
Tensor Range:  0.2938839 0.3174576
Batch 9
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6262921094894409
	Input Std: 0.09438585489988327
	Pred Mean: -0.17793646454811096
	Pred Std: 0.015148244798183441
	Truth Mean: 0.0027393761556595564
	Truth Std: 0.011284269392490387
Tensor Range:  0.28270394 0.8148092
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5971490740776062
	Input Std: 0.07661227136850357
	Pred Mean: -0.24476809799671173
	Pred Std: 0.026175564154982567
	Truth Mean: 0.0013476163148880005
	Truth Std: 0.006844744551926851
Tensor Range:  0.35521272 0.74473894
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4843887686729431
	Input Std: 0.07086072862148285
	Pred Mean: 0.430820107460022
	Pred Std: 0.03338809683918953
	Truth Mean: -0.0002539061242714524
	Truth Std: 0.0027719661593437195
Tensor Range:  0.34680024 0.59916866
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.27826762199401855
	Input Std: 0.06546156853437424
	Pred Mean: 0.11262490600347519
	Pred Std: 0.020276911556720734
	Truth Mean: -9.148674507741816e-06
	Truth Std: 0.003786435117945075
Tensor Range:  0.13995264 0.41532102
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5019904971122742
	Input Std: 0.027532784268260002
	Pred Mean: 0.00019501234055496752
	Pred Std: 0.00595439225435257
	Truth Mean: -0.00020659028086811304
	Truth Std: 0.006245937664061785
Tensor Range:  0.3840734 0.63698244
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5080071091651917
	Input Std: 0.037252798676490784
	Pred Mean: -0.00015705139958299696
	Pred Std: 0.005239644553512335
	Truth Mean: 0.00011799499770859256
	Truth Std: 0.007469604257494211
Tensor Range:  0.3208949 0.71562225
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5328438878059387
	Input Std: 0.05490873381495476
	Pred Mean: 1.2341241927060764e-05
	Pred Std: 0.005840788595378399
	Truth Mean: 3.913741966243833e-05
	Truth Std: 0.008775284513831139
Tensor Range:  0.3676647 0.80193746
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5358836054801941
	Input Std: 0.053369030356407166
	Pred Mean: -0.00034259710810147226
	Pred Std: 0.0134753892198205
	Truth Mean: -0.0001129988522734493
	Truth Std: 0.007832806557416916
Tensor Range:  0.4048097 0.7712188
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4981003403663635
	Input Std: 0.024923915043473244
	Pred Mean: -5.1064755098195747e-05
	Pred Std: 0.00724320113658905
	Truth Mean: 0.00020816450705751777
	Truth Std: 0.006882044952362776
Tensor Range:  0.37144992 0.6256499
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49927422404289246
	Input Std: 0.02904644049704075
	Pred Mean: 0.000539926637429744
	Pred Std: 0.005387473851442337
	Truth Mean: 0.00020647782366722822
	Truth Std: 0.008246089331805706
Tensor Range:  0.30423477 0.69873476
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4999607503414154
	Input Std: 0.044120512902736664
	Pred Mean: 0.00040639712824486196
	Pred Std: 0.0066346279345452785
	Truth Mean: -5.605982369161211e-05
	Truth Std: 0.009404929354786873
Tensor Range:  0.2513027 0.7075527
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4997158646583557
	Input Std: 0.03263281658291817
	Pred Mean: 0.00035012251464650035
	Pred Std: 0.006219903938472271
	Truth Mean: 0.00010874391591642052
	Truth Std: 0.008205392397940159
Tensor Range:  0.3400097 0.6579597
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.166034534573555
	Input Std: 0.13715682923793793
	Pred Mean: 0.4016110599040985
	Pred Std: 0.03169023245573044
	Truth Mean: -0.001244892948307097
	Truth Std: 0.028216755017638206
Tensor Range:  0.00017618907 0.6968162
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10846827179193497
	Input Std: 0.09539990872144699
	Pred Mean: 0.2079533189535141
	Pred Std: 0.015690665692090988
	Truth Mean: -0.0020560903940349817
	Truth Std: 0.02328949049115181
Tensor Range:  5.5093135e-08 0.4817041
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.02146000973880291
	Input Std: 0.02946447767317295
	Pred Mean: -0.16593493521213531
	Pred Std: 0.023690154775977135
	Truth Mean: -0.0008508244645781815
	Truth Std: 0.007797567173838615
Tensor Range:  2.4999839e-08 0.15827203
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.9317648770520464e-05
	Input Std: 1.130944747274043e-05
	Pred Mean: -0.2556588053703308
	Pred Std: 0.028377648442983627
	Truth Mean: 3.466811904218048e-05
	Truth Std: 8.954516488302033e-06
Tensor Range:  2.801652e-08 9.025522e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06333541125059128
	Input Std: 0.0014884357806295156
	Pred Mean: 0.0672840029001236
	Pred Std: 0.01595362275838852
	Truth Mean: -4.1122497350443155e-05
	Truth Std: 0.00022339887800626457
Tensor Range:  0.05818241 0.066965446
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07947797328233719
	Input Std: 0.001931463018991053
	Pred Mean: 0.35283103585243225
	Pred Std: 0.025993771851062775
	Truth Mean: -3.1606182346877176e-06
	Truth Std: 0.000142623161082156
Tensor Range:  0.07433427 0.08250576
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12969659268856049
	Input Std: 0.004266227129846811
	Pred Mean: 0.25518402457237244
	Pred Std: 0.02371087670326233
	Truth Mean: 3.908910002792254e-05
	Truth Std: 6.83669131831266e-05
Tensor Range:  0.12127936 0.13546859
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.3112168312072754
	Input Std: 0.006301524117588997
	Pred Mean: 0.046050671488046646
	Pred Std: 0.01011035405099392
	Truth Mean: 3.509845191729255e-05
	Truth Std: 8.409899601247162e-05
Tensor Range:  0.29370484 0.3170618
Batch 10
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6249468922615051
	Input Std: 0.09510437399148941
	Pred Mean: -0.17791138589382172
	Pred Std: 0.01541051547974348
	Truth Mean: 0.002762214280664921
	Truth Std: 0.011633585207164288
Tensor Range:  0.3389792 0.8011372
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5957154035568237
	Input Std: 0.0779644101858139
	Pred Mean: -0.2446778267621994
	Pred Std: 0.026371128857135773
	Truth Mean: 0.0013474387815222144
	Truth Std: 0.007539018988609314
Tensor Range:  0.3558809 0.7461967
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4824983775615692
	Input Std: 0.07295391708612442
	Pred Mean: 0.43080928921699524
	Pred Std: 0.034313999116420746
	Truth Mean: -0.00041792576666921377
	Truth Std: 0.0028488398529589176
Tensor Range:  0.32010788 0.60384476
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2802411913871765
	Input Std: 0.06466101855039597
	Pred Mean: 0.11253641545772552
	Pred Std: 0.02052023448050022
	Truth Mean: -0.00037159601924940944
	Truth Std: 0.003853714559227228
Tensor Range:  0.14332204 0.4092168
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5000631213188171
	Input Std: 0.026668453589081764
	Pred Mean: 0.00023493844491895288
	Pred Std: 0.005923194345086813
	Truth Mean: -9.0509514848236e-05
	Truth Std: 0.006049795541912317
Tensor Range:  0.3985152 0.6247879
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5057855248451233
	Input Std: 0.03550877422094345
	Pred Mean: -0.0001907569676404819
	Pred Std: 0.005323633551597595
	Truth Mean: 0.00021006354654673487
	Truth Std: 0.007534179836511612
Tensor Range:  0.3428584 0.66694933
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5305002927780151
	Input Std: 0.0552837960422039
	Pred Mean: 1.3389769264904317e-05
	Pred Std: 0.005852987524122
	Truth Mean: 0.00012123051419621333
	Truth Std: 0.008671720512211323
Tensor Range:  0.36667556 0.76417553
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5318143367767334
	Input Std: 0.054429732263088226
	Pred Mean: -0.0003749967145267874
	Pred Std: 0.013611219823360443
	Truth Mean: 0.0001151218093582429
	Truth Std: 0.008212564513087273
Tensor Range:  0.38896564 0.74437475
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4984358847141266
	Input Std: 0.026212641969323158
	Pred Mean: -6.024205868015997e-05
	Pred Std: 0.007284286431968212
	Truth Mean: 0.00036844605347141623
	Truth Std: 0.006952834315598011
Tensor Range:  0.35058844 0.6366885
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.499451220035553
	Input Std: 0.03024878352880478
	Pred Mean: 0.0004941917140968144
	Pred Std: 0.005536921322345734
	Truth Mean: 0.00018532540707383305
	Truth Std: 0.008172014728188515
Tensor Range:  0.29737338 0.71182334
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4997486174106598
	Input Std: 0.044424254447221756
	Pred Mean: 0.0003124499344266951
	Pred Std: 0.006595035083591938
	Truth Mean: -7.760655716992915e-05
	Truth Std: 0.009397458285093307
Tensor Range:  0.28342107 0.7337211
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.50169438123703
	Input Std: 0.04537368193268776
	Pred Mean: 0.0002860112872440368
	Pred Std: 0.0062942528165876865
	Truth Mean: 0.00038065409171395004
	Truth Std: 0.008391882292926311
Tensor Range:  0.2971641 0.70146406
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16688752174377441
	Input Std: 0.14023548364639282
	Pred Mean: 0.40156662464141846
	Pred Std: 0.032880544662475586
	Truth Mean: -0.0009358915267512202
	Truth Std: 0.027789050713181496
Tensor Range:  0.0007097885 0.70422983
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.10991508513689041
	Input Std: 0.09733621776103973
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Pred Mean: 0.20793630182743073
	Pred Std: 0.016360629349946976
	Truth Mean: -0.0023257893044501543
	Truth Std: 0.024870535358786583
Tensor Range:  0.0002235235 0.48684755
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.02076459862291813
	Input Std: 0.028813263401389122
	Pred Mean: -0.16584135591983795
	Pred Std: 0.02397647313773632
	Truth Mean: -0.0007087374106049538
	Truth Std: 0.007796396967023611
Tensor Range:  2.9902523e-08 0.17325123
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.868815838359296e-05
	Input Std: 1.103884460462723e-05
	Pred Mean: -0.2555893659591675
	Pred Std: 0.02855149284005165
	Truth Mean: 3.5055327316513285e-05
	Truth Std: 8.71568227012176e-06
Tensor Range:  4.041819e-08 8.334442e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06348325312137604
	Input Std: 0.0013885130174458027
	Pred Mean: 0.06728620082139969
	Pred Std: 0.01594318263232708
	Truth Mean: -4.1632763895904645e-05
	Truth Std: 0.00023432605667039752
Tensor Range:  0.05816599 0.06758783
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07961297035217285
	Input Std: 0.001744264387525618
	Pred Mean: 0.352782279253006
	Pred Std: 0.026802198961377144
	Truth Mean: 1.142939936471521e-06
	Truth Std: 0.0001459185587009415
Tensor Range:  0.07392384 0.083056964
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12976890802383423
	Input Std: 0.004104927182197571
	Pred Mean: 0.25515562295913696
	Pred Std: 0.024344058707356453
	Truth Mean: 4.351511233835481e-05
	Truth Std: 6.237255001906306e-05
Tensor Range:  0.121164374 0.13488805
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.3113607168197632
	Input Std: 0.005858178716152906
	Pred Mean: 0.04604922980070114
	Pred Std: 0.010248307138681412
	Truth Mean: 3.378410474397242e-05
	Truth Std: 8.441774843959138e-05
Tensor Range:  0.2942707 0.31756198
Batch 11
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6289718747138977
	Input Std: 0.08926350623369217
	Pred Mean: -0.17780965566635132
	Pred Std: 0.015633830800652504
	Truth Mean: 0.004138970281928778
	Truth Std: 0.012433357536792755
Tensor Range:  0.33448857 0.8169096
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5997259020805359
	Input Std: 0.07244961708784103
	Pred Mean: -0.24464035034179688
	Pred Std: 0.026395397260785103
	Truth Mean: 0.0015187491662800312
	Truth Std: 0.007385873235762119
Tensor Range:  0.36477467 0.76956415
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4861932694911957
	Input Std: 0.06759269535541534
	Pred Mean: 0.430701345205307
	Pred Std: 0.03429901599884033
	Truth Mean: -0.0002404583356110379
	Truth Std: 0.0028813930694013834
Tensor Range:  0.33491772 0.5917599
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2775876224040985
	Input Std: 0.06625787913799286
	Pred Mean: 0.11249613016843796
	Pred Std: 0.020716585218906403
	Truth Mean: -0.0001473313895985484
	Truth Std: 0.0038448949344456196
Tensor Range:  0.15133402 0.4290182
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5005877614021301
	Input Std: 0.028330940753221512
	Pred Mean: 0.0001870169653557241
	Pred Std: 0.00603637145832181
	Truth Mean: -0.0002180292212869972
	Truth Std: 0.00612215232104063
Tensor Range:  0.40232727 0.6042364
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5071325302124023
	Input Std: 0.03873997926712036
	Pred Mean: -0.00018686485418584198
	Pred Std: 0.0052360170520842075
	Truth Mean: 0.0002866818103939295
	Truth Std: 0.007425087038427591
Tensor Range:  0.35142243 0.6727406
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5297908186912537
	Input Std: 0.0585748627781868
	Pred Mean: 3.113847196800634e-05
	Pred Std: 0.006000859662890434
	Truth Mean: 0.00043178637861274183
	Truth Std: 0.008787991479039192
Tensor Range:  0.34905744 0.82042104
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5390596985816956
	Input Std: 0.04805333912372589
	Pred Mean: -0.00040640210499987006
	Pred Std: 0.013806002214550972
	Truth Mean: 0.0005428447620943189
	Truth Std: 0.008208566345274448
Tensor Range:  0.4161888 0.7254616
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4981747567653656
	Input Std: 0.02529452182352543
	Pred Mean: -0.00016185158165171742
	Pred Std: 0.007350350730121136
	Truth Mean: 0.0003471136442385614
	Truth Std: 0.006687411107122898
Tensor Range:  0.37442017 0.6295702
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.49912190437316895
	Input Std: 0.0289886686950922
	Pred Mean: 0.0004965809639543295
	Pred Std: 0.005379363428801298
	Truth Mean: 0.0002681187470443547
	Truth Std: 0.008064393885433674
Tensor Range:  0.28765887 0.71760887
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5004330277442932
	Input Std: 0.041219908744096756
	Pred Mean: 0.00044062634697183967
	Pred Std: 0.006743197795003653
	Truth Mean: 3.2943207770586014e-06
	Truth Std: 0.009210869669914246
Tensor Range:  0.26410943 0.77310944
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5002726912498474
	Input Std: 0.024282561615109444
	Pred Mean: 0.00020901949028484523
	Pred Std: 0.006133351940661669
	Truth Mean: 0.00021821721747983247
	Truth Std: 0.00858289748430252
Tensor Range:  0.40611064 0.59651065
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1695302575826645
	Input Std: 0.13675403594970703
	Pred Mean: 0.40185093879699707
	Pred Std: 0.03131240978837013
	Truth Mean: -0.0036197255831211805
	Truth Std: 0.028485553339123726
Tensor Range:  0.0003547152 0.7588027
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.1120031401515007
	Input Std: 0.0966169610619545
	Pred Mean: 0.20815116167068481
	Pred Std: 0.015705764293670654
	Truth Mean: -0.003732706420123577
	Truth Std: 0.02349184639751911
Tensor Range:  0.000117055424 0.5282931
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.020815331488847733
	Input Std: 0.028089551255106926
	Pred Mean: -0.1658712774515152
	Pred Std: 0.02460693009197712
	Truth Mean: -0.0005953394575044513
	Truth Std: 0.0077156429179012775
Tensor Range:  2.4999952e-08 0.16840003
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.9175043639261276e-05
	Input Std: 1.0282419680152088e-05
	Pred Mean: -0.2557288706302643
	Pred Std: 0.02884715609252453
	Truth Mean: 3.51160233549308e-05
	Truth Std: 8.235683708335273e-06
Tensor Range:  3.35383e-08 8.360794e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06334666162729263
	Input Std: 0.001600150833837688
	Pred Mean: 0.06731756776571274
	Pred Std: 0.015963761135935783
	Truth Mean: -3.8837199099361897e-05
	Truth Std: 0.00023470059386454523
Tensor Range:  0.057932872 0.06958945
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07952731102705002
	Input Std: 0.0019946317188441753
	Pred Mean: 0.3527669608592987
	Pred Std: 0.026696622371673584
	Truth Mean: -1.576324052621203e-06
	Truth Std: 0.00014858007489237934
Tensor Range:  0.0740933 0.08486747
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12982480227947235
	Input Std: 0.004197564907371998
	Pred Mean: 0.25508275628089905
	Pred Std: 0.024299290031194687
	Truth Mean: 4.5661567128263414e-05
	Truth Std: 7.070758147165179e-05
Tensor Range:  0.12192583 0.13510326
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.31115734577178955
	Input Std: 0.005972184706479311
	Pred Mean: 0.04603864997625351
	Pred Std: 0.010341876186430454
	Truth Mean: 4.631703268387355e-05
	Truth Std: 9.533140837447718e-05
Tensor Range:  0.29532635 0.31716084
Batch 12
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.6240817308425903
	Input Std: 0.09505005180835724
	Pred Mean: -0.17788101732730865
	Pred Std: 0.01569671556353569
	Truth Mean: 0.0059627448208630085
	Truth Std: 0.012647390365600586
Tensor Range:  0.3274305 0.82848316
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5955448746681213
	Input Std: 0.07788705080747604
	Pred Mean: -0.24464614689350128
	Pred Std: 0.02645963802933693
	Truth Mean: 0.002521866699680686
	Truth Std: 0.00843109656125307
Tensor Range:  0.38735816 0.781095
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.48525896668434143
	Input Std: 0.0697641372680664
	Pred Mean: 0.43080025911331177
	Pred Std: 0.03476865962147713
	Truth Mean: -0.0001762264728313312
	Truth Std: 0.0029984209686517715
Tensor Range:  0.3251097 0.6035834
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.2874244749546051
	Input Std: 0.06089396774768829
	Pred Mean: 0.11251042783260345
	Pred Std: 0.02074897475540638
	Truth Mean: -0.0006611198768950999
	Truth Std: 0.004216254688799381
Tensor Range:  0.15397812 0.4077676
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4984431862831116
	Input Std: 0.027903610840439796
	Pred Mean: 0.00030792219331488013
	Pred Std: 0.005955688655376434
	Truth Mean: -0.00028625206323340535
	Truth Std: 0.006228455808013678
Tensor Range:  0.4055274 0.61125475
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5045359134674072
	Input Std: 0.03738223761320114
	Pred Mean: -0.00011104351142421365
	Pred Std: 0.005338685121387243
	Truth Mean: -1.3006701919948682e-05
	Truth Std: 0.0077058239839971066
Tensor Range:  0.3310271 0.64898163
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5285739302635193
	Input Std: 0.059193722903728485
	Pred Mean: -4.873594662058167e-05
	Pred Std: 0.005994054488837719
	Truth Mean: 0.00011740387708414346
	Truth Std: 0.009432390332221985
Tensor Range:  0.35315114 0.80569667
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5233577489852905
	Input Std: 0.05686444789171219
	Pred Mean: -0.0004891018033958972
	Pred Std: 0.013802753761410713
	Truth Mean: 0.000378231517970562
	Truth Std: 0.009673628024756908
Tensor Range:  0.30888125 0.76569945
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4982280135154724
	Input Std: 0.02533494122326374
	Pred Mean: -3.271229434176348e-05
	Pred Std: 0.007349506486207247
	Truth Mean: 0.00042942760046571493
	Truth Std: 0.006794953718781471
Tensor Range:  0.38281438 0.6295144
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.4996197819709778
	Input Std: 0.02853241004049778
	Pred Mean: 0.0004714700917247683
	Pred Std: 0.005653847474604845
	Truth Mean: 3.9314756577368826e-05
	Truth Std: 0.008357939310371876
Tensor Range:  0.34065482 0.6912548
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5003737807273865
	Input Std: 0.04600723087787628
	Pred Mean: 0.00026727980002760887
	Pred Std: 0.0065985252149403095
	Truth Mean: 0.00020826805848628283
	Truth Std: 0.010022366419434547
Tensor Range:  0.28141534 0.73041534
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.5008252263069153
	Input Std: 0.05678063631057739
	Pred Mean: 0.0003067412180826068
	Pred Std: 0.006259128451347351
	Truth Mean: -0.00028406482306309044
	Truth Std: 0.010417487472295761
Tensor Range:  0.25249326 0.76099324
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:537: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
/home/jgib124/aurora/aurora/inference/generate_outputs.py:673: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.
  plt.tight_layout()
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.16727860271930695
	Input Std: 0.1423996090888977
	Pred Mean: 0.4015139639377594
	Pred Std: 0.03256145864725113
	Truth Mean: -0.0023982881102710962
	Truth Std: 0.028179803863167763
Tensor Range:  0.0005480313 0.78314006
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.11104480922222137
	Input Std: 0.10159698128700256
	Pred Mean: 0.20783790946006775
	Pred Std: 0.01620492897927761
	Truth Mean: -0.0029022779781371355
	Truth Std: 0.023490512743592262
Tensor Range:  1.14317444e-07 0.5492481
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.021593067795038223
	Input Std: 0.029017535969614983
	Pred Mean: -0.16583631932735443
	Pred Std: 0.024464065209031105
	Truth Mean: -0.0007076788460835814
	Truth Std: 0.00802087876945734
Tensor Range:  2.49999e-08 0.16617922
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 3.8298374420264736e-05
	Input Std: 1.0561267117736861e-05
	Pred Mean: -0.2554909288883209
	Pred Std: 0.028833432123064995
	Truth Mean: 3.5308010410517454e-05
	Truth Std: 8.175770744855981e-06
Tensor Range:  9.1253185e-07 8.829494e-05
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.06348946690559387
	Input Std: 0.0014434627955779433
	Pred Mean: 0.06724673509597778
	Pred Std: 0.01595727540552616
	Truth Mean: -9.287278226111084e-05
	Truth Std: 0.00040794425876811147
Tensor Range:  0.05780573 0.067528434
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.07961603254079819
	Input Std: 0.0018066560151055455
	Pred Mean: 0.3527106046676636
	Pred Std: 0.027192773297429085
	Truth Mean: -3.372095670783892e-05
	Truth Std: 0.00026583587168715894
Tensor Range:  0.07371074 0.08357721
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.12983399629592896
	Input Std: 0.004110761918127537
	Pred Mean: 0.255130797624588
	Pred Std: 0.02466612495481968
	Truth Mean: 3.541148907970637e-05
	Truth Std: 6.41106380498968e-05
Tensor Range:  0.12094705 0.13503675
	Input Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Truth Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Pred Slice: <class 'torch.Tensor'>, torch.Size([721, 1440])
	Input Mean: 0.312078595161438
	Input Std: 0.004939456004649401
	Pred Mean: 0.04602600261569023
	Pred Std: 0.01036380510777235
	Truth Mean: 3.835050665657036e-05
	Truth Std: 0.00010287827899446711
Tensor Range:  0.29594997 0.3172015
